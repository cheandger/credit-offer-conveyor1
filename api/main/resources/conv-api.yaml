openapi: 3.0.1
info:
  title: Conveyor
  version: 0.0.1
servers:
  - url: http://localhost:8080
tags:
  - name: OffersService
    description: The LoanOfferVariations calculation
  - name: CalculationService
    description: The calculation of loan variations

paths:
  /conveyor/offers:
    post:
      tags:
        - OffersService
      summary: The LoanOfferVariations calculation
      operationId: offers


      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanApplicationRequestDTO'

      responses:

        '200':
          description: 'Ok. Successful offer response'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoanOfferDTO'


        '400':
          description: 'Error 400 Bad request'


        '422':
          description: 'Error 422 Unprocessable Entity '



  /conveyor/calculation:
    post:
      tags:
        - CalculationService
      summary: Creating CreditDTO
      operationId: calculation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoringDataDTO'
      responses:
        '200':
          description: 'Successful calculation response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditDTO'

        '400':
          description: 'Error 400 Bad request'

        '422':
         description: 'Error 422 Unprocessable Entity '





components:
  schemas:

    LoanOfferDTO:
      description: "DTO object that contains different vars of LoanOffer"
      type: object
      properties:
        applicationId:
          type: integer
          format: int64

        requestedAmount:
          type: number
        totalAmount:
          type: number
        term:
          type: integer
        monthlyPayment:
          type: number
        rate:
          type: number
        isInsuranceEnabled:
          type: boolean
        isSalaryClient:
          type: boolean



    LoanApplicationRequestDTO:
      type: object
      required:
        - amount
        - term
        - firstName
        - lastName
        - email
        - birthdate
        - passportSeries
        - passportNumber
      properties:
        amount:
          type: number
          minimum: 10000
        term:
          type: integer
          minimum: 6
        firstName:
          type: string
          pattern: '^[a-zA-Zа-яА-Я]{2,30}'
        lastName:
          type: string
          pattern: '^[a-zA-Zа-яА-Я]{2,30}'
        middleName:
          type: string
          pattern: '^[a-zA-Zа-яА-Я]{2,30}'
        email:
          type: string
          format: email
          pattern: '[\w\.]{2,50}@[\w\.]{2,20}'
        birthdate:
          type: string
          format: date
          example:
            1985-01-29



        passportSeries:
          type: string
          pattern: '^\d{4}$/'
        passportNumber:
          type: string
          pattern: '^\d{6}$/'

    CreditDTO:
      type: object
      properties:
        amount:
          type: number
          minimum: 10000
        term:
          type: integer
          minimum: 6
        monthlyPayment:
          type: number
        rate:
          type: number
        psk:
          type: number
        isInsuranceEnabled:
          type: boolean
        isSalaryClient:
          type: boolean
        paymentSchedule:
          type: array
          items:
            $ref: '#/components/schemas/PaymentScheduleElement'

    ScoringDataDTO:
      type: object
      required:
        - amount
        - term
        - firstName
        - lastName
        - gender
        - birthdate
        - passportSeries
        - passportNumber
        - passportIssueDate
        - passportIssueBranch
        - maritalStatus
        - dependentAmount
        - employment
        - account
        - isInsuranceEnabled
        - isSalaryClient
      properties:
        amount:
          type: number
          minimum: 10000
        term:
          type: integer
          minimum: 6
        firstName:
          type: string
          pattern: '^[a-zA-Zа-яА-Я]{2,30}$/'

        lastName:
          type: string
          pattern: '^[a-zA-Zа-яА-Я]{2,30}$/'

        middleName:
          type: string
          pattern: '^[a-zA-Zа-яА-Я]{2,30}$/'

        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - NON_BINARY
        birthdate:
          type: string
          format: date
          example:
            1985-01-29


        passportSeries:
          type: string
          pattern: '^\d{4}$/'
        passportNumber:
          type: string
          pattern: '^\d{6}$/'
        passportIssueDate:
          type: string
          format: date
          example:
            1985-01-29



        passportIssueBranch:
          type: string

        maritalStatus:
          type: string
          enum:
            - MARRIED
            - DIVORCED
            - SINGLE
            - WIDOW_WIDOWER
        dependentAmount:
          type: integer
        employment:
          $ref: '#/components/schemas/EmploymentDTO'
        account:
          type: string
        isInsuranceEnabled:
          type: boolean
        isSalaryClient:
          type: boolean


    EmploymentDTO:
      type: object
      properties:
        employmentStatus:
          type: string
          enum:
            - UNEMPLOYED
            - SELF_EMPLOYED
            - EMPLOYED
            - BUSINESS_OWNER
        employerINN:
          type: string
          format: int64
          pattern: '^\d{10}$/'
        salary:
          type: number
        position:
          type: string
          enum:
            - WORKER
            - MID_MANAGER
            - TOP_MANAGER
            - OWNER

        workExperienceTotal:
          type: integer
        workExperienceCurrent:
          type: integer




    PaymentScheduleElement:
      type: object
      properties:
        number:
          type: integer
        date:
          type: string
          format: date
          example:
            1985-01-29


        totalPayment:
          type: number
        interestPayment:
          type: number
        debtPayment:
          type: number
        remainingDebt:
          type: number






